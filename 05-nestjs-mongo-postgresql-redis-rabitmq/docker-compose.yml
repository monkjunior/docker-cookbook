version: "3.3"
services:
  postgres:
    image: postgres11-postgis2.5
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${POSTGRES_NAME}
    hostname: ${POSTGRES_NAME}
    ports:
      - '${POSTGRES_EXPOSE_PORT}:${POSTGRES_PORT}'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - '${POSTGRES_DATA_DIR}:/var/lib/postgresql/data'
  mongo:
    image: mongo:4.2
    container_name: ${MONGO_NAME}
    hostname: ${MONGO_NAME}
    environment:
      - MONGO_DATA_DIR=${MONGO_DATA_DIR}
      - MONGO_LOG_DIR=/dev/null
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/001_users.js:ro
      - ${MONGO_DATA_DIR}:/data/db
    ports:
      - '${MONGO_EXPOSE_PORT}:${MONGO_PORT}'
    restart: always
  rabbitmq:
    image: rabbitmq:3.7.5-management
    container_name: ${RABBITMQ_NAME}
    hostname: ${RABBITMQ_NAME}
    ports:
      - '${RABBITMQ_EXPOSE_PORT}:${RABBITMQ_PORT}'
      - '${RABBITMQ_EXPOSE_ADMIN_PORT}:${RABBITMQ_ADMIN_PORT}'
    volumes:
      - '${RABBITMQ_DATA_DIR}:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=1024MB
  redis:
    image: redis:5.0.5-alpine
    container_name: ${REDIS_NAME}
    hostname: ${REDIS_NAME}
    ports:
      - '${REDIS_EXPOSE_PORT}:${REDIS_PORT}'
  spf-core:
    build:
      context: ./core
      dockerfile: Dockerfile
    container_name: ${CORE_NAME}
    volumes:
      - ./core:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
    environment:
      - NODE_ENV=${CORE_ENV}
      - SET_CONTAINER_TIMEZONE=true
      - CONTAINER_TIMEZONE=UTC
      - TZ=UTC
    ports:
      - '${CORE_EXPOSE_PORT}:${CORE_PORT}'
    depends_on:
      - 'postgres'
      - 'rabbitmq'
      - 'redis'
    links:
      - 'postgres'
      - 'rabbitmq'
      - 'redis'
  spf-social:
    build:
      context: ./social
      dockerfile: Dockerfile
    container_name: ${SOCIAL_NAME}
    volumes:
      - ./social:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
    environment:
      - NODE_ENV=${SOCIAL_ENV}
      - SET_CONTAINER_TIMEZONE=true
      - CONTAINER_TIMEZONE=UTC
      - TZ=UTC
    ports:
      - '${SOCIAL_EXPOSE_PORT}:${SOCIAL_PORT}'
    depends_on:
      - 'postgres'
      - 'rabbitmq'
      - 'redis'
    links:
      - 'postgres'
      - 'rabbitmq'
      - 'redis'
volumes:
  postgres:
  mongodb:
  data:
